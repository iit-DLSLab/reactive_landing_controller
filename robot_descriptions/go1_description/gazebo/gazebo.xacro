<?xml version="1.0"?>

<robot xmlns:xacro="http://ros.org/wiki/xacro">
<xacro:arg name="task_period" default="0.004"/>
<xacro:arg name="robot_name" default="go1"/>


	<gazebo>
		<plugin name="gazebo_ros_controller_manager" filename="libgazebo_ros_control.so">
   
			<!-- if task_period is smaller than sim max_step_size (in world file) it is clamped to that value!!!!!!-->
			<robotNamespace>/$(arg robot_name)</robotNamespace>
			<robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
			<legacyModeNS>true</legacyModeNS>
                        <controlPeriod>$(arg task_period)</controlPeriod>

		</plugin>

		<plugin filename="libgazebo_ros_p3d.so" name="gazebo_ros_p3d">
                        <robotNamespace>/$(arg robot_name)</robotNamespace>
                        <bodyName>trunk</bodyName>
			<topicName>ground_truth</topicName>
			<frameName>world</frameName>
			<xyzOffsets>0 0 0</xyzOffsets>
			<rpyOffsets>0 0 0</rpyOffsets>
			<gaussianNoise>0</gaussianNoise>
			<alwaysOn>true</alwaysOn>
                        <updateRate>${1/ $(arg task_period)}</updateRate>
		</plugin>
	</gazebo>

	<!-- Show the trajectory of trunk center. 
    <gazebo>
        <plugin name="3dplot" filename="libLinkPlot3DPlugin.so">
            <frequency>10</frequency>
            <plot>
                <link>base_link</link>
                <pose>0 0 0 0 0 0</pose>
                <material>Gazebo/Yellow</material>
            </plot>
        </plugin>
    </gazebo>-->

    <!-- Apply force to trunck 
    <gazebo>
        <plugin filename="libgazebo_ros_force.so" name="gazebo_ros_force">
            <bodyName>trunk</bodyName>
            <topicName>/apply_force/trunk</topicName>
        </plugin>
    </gazebo>-->




    <!-- IMU -->
    <gazebo reference="imu_link">
        <gravity>true</gravity>
        <sensor name="imu_sensor" type="imu">
            <always_on>true</always_on>
            <update_rate>${1/ $(arg task_period)}</update_rate>
            <visualize>true</visualize>

	    <imu>
            <linear_acceleration>
                <x>
                    <noise type="gaussian">
                        <mean>0.0</mean>
                        <stddev>0.00001</stddev>
                        <bias_mean>0.0</bias_mean>
                        <bias_stddev>0</bias_stddev>
                    </noise>
                </x> 
        	<y>
                    <noise type="gaussian">
                        <mean>0.0</mean>
                        <stddev>0.00001</stddev>
                        <bias_mean>0.0</bias_mean>
                        <bias_stddev>0</bias_stddev>
                    </noise>
                </y>   
        	<z>
                    <noise type="gaussian">
                        <mean>0.0</mean>
                        <stddev>0.00001</stddev>
                        <bias_mean>0.0</bias_mean>
                        <bias_stddev>0.0</bias_stddev>
                    </noise>
                </z>          
            </linear_acceleration>
            </imu>

            <topic>__default_topic__</topic>
            <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
                <topicName>$(arg robot_name)/trunk_imu</topicName>
                <bodyName>imu_link</bodyName>
                <updateRateHZ>${1/ $(arg task_period)}</updateRateHZ>
                <gaussianNoise>0.00001</gaussianNoise>    <!-- STD dev sqrt of covariance -->
                <xyzOffset>0 0 0</xyzOffset>
                <rpyOffset>0 0 0</rpyOffset>
                <frameName>imu_link</frameName>
            </plugin>
            <pose>0 0 0 0 0 0</pose>
        </sensor>
    </gazebo>
</robot>

